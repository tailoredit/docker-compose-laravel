version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: nginx.root.dockerfile
    container_name: nginx
    ports:
      - 80:80
      # Port for xdebug (ensure this matches the remote_port in xdebug.ini)
      - 9001:9001
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    # image: mariadb:10.7.3
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.root.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
      # Enable xdebug
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    networks:
      - laravel

  redis:
    image: redis:alpine
    # image: redis:6.2.6-alpine3.15
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel

  composer:
    image: composer:2
    # FROM composer:2.2.9
    container_name: composer
    volumes:
      - ./src:/var/www/html
      - ~/.composer/cache:/tmp
    working_dir: /var/www/html
    depends_on:
      - php
    user: root
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  npm:
    image: node:13.7
    # image: lts-alpine3.15
    # image: 16.14.2-alpine3.15
    container_name: npm
    volumes:
      - ./src:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']  # Development
    #entrypoint: ["npm", "ci", "--only-production"]  # Production
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.root.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    # image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    # image: phpmyadmin:latest
    # image: phpmyadmin/5.1.3-fpm-alpine
    container_name: phpmyadmin
    depends_on:
      - mysql
      - php
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      PMA_HOST: mysql
      PMA_PORT: 3306
    restart: unless-stopped
    ports:
      - 8081:80
    networks:
      - laravel

  # phpunit:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       - UID=${UID:-1000}
  #       - GID=${GID:-1000}
  #   container_name: phpunit
  #   depends_on:
  #     - php
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   entrypoint: ['php', '/var/www/html/vendor/bin/phpunit']
  #   networks:
  #     - laravel
